# Build stage
FROM node:20-alpine as build

WORKDIR /app

# Copy package files first
COPY ui/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the source code
COPY ui/ ./

# Create production build
RUN npm run build

# Serve stage
FROM nginx:alpine

# Install curl and other debug tools
RUN apk add --no-cache curl busybox-extras

# Copy built assets from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY ui/nginx.conf /etc/nginx/conf.d/default.conf

# Verify nginx config
RUN nginx -t

# Create a startup script
COPY <<'EOF' /docker-entrypoint.sh
#!/bin/sh
echo "Starting Nginx..."
echo "Checking nginx configuration..."
nginx -t
echo "Listing /usr/share/nginx/html contents:"
ls -la /usr/share/nginx/html
echo "Checking nginx configuration file:"
cat /etc/nginx/conf.d/default.conf
echo "Starting nginx..."
nginx -g 'daemon off;'
EOF

RUN chmod +x /docker-entrypoint.sh

# Expose port
EXPOSE 80

# Health check with debug output
HEALTHCHECK --interval=10s --timeout=3s --start-period=10s \
    CMD curl -f http://localhost:80/health || exit 1

ENTRYPOINT ["/docker-entrypoint.sh"] 